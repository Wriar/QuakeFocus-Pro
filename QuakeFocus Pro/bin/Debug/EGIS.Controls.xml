<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EGIS.Controls</name>
    </assembly>
    <members>
        <member name="F:EGIS.Controls.CRSSelectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:EGIS.Controls.CRSSelectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EGIS.Controls.CRSSelectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:EGIS.Controls.CsvToShapeFileControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:EGIS.Controls.CsvToShapeFileControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EGIS.Controls.CsvToShapeFileControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EGIS.Controls.CRSSelectionControl">
            <summary>
            UserControl to Select a Coordinate Reference System
            </summary>
        </member>
        <member name="F:EGIS.Controls.CRSSelectionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:EGIS.Controls.CRSSelectionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EGIS.Controls.CRSSelectionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EGIS.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:EGIS.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:EGIS.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:EGIS.Controls.ProgressLoadStatusHandler">
            <summary>
            delegate to called to handle progress project loading
            </summary>
            <param name="totalLayers"></param>
            <param name="numberLayersLoaded"></param>
        </member>
        <member name="T:EGIS.Controls.PanSelectMode">
            <summary>
            Pan/Select model enumeration
            </summary>
        </member>
        <member name="F:EGIS.Controls.PanSelectMode.None">
            <summary>
            None defined
            </summary>
        </member>
        <member name="F:EGIS.Controls.PanSelectMode.Pan">
            <summary>
            Pan mode
            </summary>
        </member>
        <member name="F:EGIS.Controls.PanSelectMode.SelectRectangle">
            <summary>
            Rectangular select mode
            </summary>
        </member>
        <member name="F:EGIS.Controls.PanSelectMode.SelectCircle">
            <summary>
            Circular select mode
            </summary>
        </member>
        <member name="F:EGIS.Controls.PanSelectMode.ZoomRectangle">
            <summary>
            Zoom map to selected rectangle
            </summary>
        </member>
        <member name="F:EGIS.Controls.PanSelectMode.ZoomCircle">
            <summary>
            Zoom map to fit selected circle
            </summary>
        </member>
        <member name="T:EGIS.Controls.SFMap">
            <summary>
            SFMap (ShapeFile Map) is a .NET ShapeFile Control which displays shapefiles in a .NET Windows Form application
            </summary>
            <remarks>
            This is the main control in the EGIS.Controls namespace
            <para>
            The SFMap control is a .NET ShapeFile Control which provides methods to add or remove ShapeFile layers to/from a map, zoom, pan
            and locate shapes on the map.     
            </para>
            </remarks>
        </member>
        <member name="T:EGIS.Controls.SFMap.TooltipEventArgs">
            <summary>
            EventArgs class containing data for the TooltipDisplayed event
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.TooltipEventArgs.ShapeFileIndex">
            <summary>
            Gets / Sets the zero based index of the shapefile.
            </summary>
            <remarks>The returned value will be between zero and the number of Shapefiles in the SFMap displaying the tooltip<br/>
            If no tooltip is displayed ShapeFileIndex returns -1<br/>
            </remarks>
        </member>
        <member name="P:EGIS.Controls.SFMap.TooltipEventArgs.RecordIndex">
            <summary>
            Gets / Sets the zero based index of the shapefile record.
            </summary>
            <remarks>The returned value will be between zero and the number of records in the Shapefile displaying the tooltip<br/>
            If no tooltip is displayed RecordIndex returns -1<br/>
            </remarks>
        </member>
        <member name="E:EGIS.Controls.SFMap.ShapeFilesChanged">
            <summary>
            Event indicating that the SFMap ShapeFile Layers has changed (ShapeFile added or removed)
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnShapeFilesChanged">
            <summary>
            Fires the ShapeFilesChanged event
            </summary>
        </member>
        <member name="E:EGIS.Controls.SFMap.ZoomLevelChanged">
            <summary>
            Event indicating that the ZoomLevel of the map has changed
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnZoomLevelChanged">
            <summary>
            Fires the ZoomLevelChanged event
            </summary>
        </member>
        <member name="E:EGIS.Controls.SFMap.TooltipDisplayed">
            <summary>
            Event fired when a tooltip is displayed for a shapefile with the RenderSettings.UseTooltip property
            set to true
            </summary>
            <remarks>The event is also fired when the tooltip is hidden. In this case the TooltipEventArgs ShapeFileIndex and RecordIndex will return -1
            This allows receivers to be notified when the mouse is no longer over a shape</remarks>
            <see cref="P:EGIS.ShapeFileLib.RenderSettings.UseToolTip"/>
            <seealso cref="M:EGIS.Controls.SFMap.GetShapeIndexAtPixelCoord(System.Int32,System.Drawing.Point,System.Int32)"/>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnTooltipDisplayed(System.Int32,System.Int32,System.Drawing.Point,EGIS.ShapeFileLib.PointD)">
            <summary>
            Fires the TooltipDisplayed event
            </summary>
            <param name="shapeIndex"></param>
            <param name="recordIndex"></param>
            <param name="mousePt"></param>
            <param name="gisPt"></param>
        </member>
        <member name="E:EGIS.Controls.SFMap.SelectedRecordsChanged">
            <summary>
            event fired when selected records of a shapefile change        
            </summary>
            <remarks>To obtain the selected records iterate over each shapefile and call the SelectedRecordIndices method</remarks>
            <see cref="P:EGIS.ShapeFileLib.ShapeFile.SelectedRecordIndices"/>        
        </member>
        <member name="E:EGIS.Controls.SFMap.PaintMapBackground">
            <summary>
            event fired when the map bacground is rendered. Handle this event to perform and painting before
            the map layers are rendered
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.MapDoubleClickedEventArgs.Cancel">
            <summary>
            get set whether to cancel the event. Set true to disable core zooming functinonality that occurs when
            the map is double clicked
            </summary>
        </member>
        <member name="E:EGIS.Controls.SFMap.CoordinateReferenceSystemChanged">
            <summary>
            Event fired when the map's Coordinate Reference System is changed
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnCoordinateReferenceSystemChanged(System.EventArgs)">
            <summary>
            Raises the CoordinateReferenceSystemChanged event.
            </summary>
            <param name="args">EventArgs object</param>
        </member>
        <member name="M:EGIS.Controls.SFMap.#ctor">
            <summary>
            SFMap contructor
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes an xml representation of the current project loaded in the SFMap control
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.ReadXml(System.Xml.XmlElement,System.String)">
            <summary>
            reads and loads XML representatino of a .EGP project
            </summary>
            <param name="projectElement"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.ReadXml(System.Xml.XmlElement,System.String,EGIS.Controls.ProgressLoadStatusHandler)">
            <summary>
            reads and loads XML representation of a .EGP project
            </summary>
            <param name="projectElement"></param>
            <param name="loadingDelegate"></param>
        </member>
        <member name="P:EGIS.Controls.SFMap.ZoomLevel">
            <summary>
            Gets or sets the current ZoomLevel of the SFMap
            </summary>
            <remarks>
            Changing the ZoomLevel will zoom into or out of the map. Increasing the ZoomLevel will zoom into the map, while decreasing the 
            ZoomLevel will zoom out of the map
            <para>
            The ZoomLevel, CentrePoint and ClientSize of the SFMap determine the location and visible area of the rendered map. The map will be rendered 
            centered at the CentrePoint and scaled according to the ZoomLevel.
            </para>
            </remarks>
            <seealso cref="P:EGIS.Controls.SFMap.CentrePoint"/>
            <exception cref="T:System.ArgumentException"> if ZoomLevel less than or equal to zero</exception>        
        </member>
        <member name="P:EGIS.Controls.SFMap.CentrePoint">
            <summary>
            Gets or sets the centre point of the map in mapping coordinates (as used by the shapefiles)
            </summary>
            <remarks>
            Changing the CentrePoint can be used to center the map on a new location without 
            changing the map scale
            <para>
            The ZoomLevel, CentrePoint and ClientSize of the SFMap determine the location and visible area of the rendered map. The map will be rendered 
            centered at the CentrePoint and scaled according to the ZoomLevel.
            </para>
            <para>This property should no longer be used. Use CentrePoint2D instead, which uses double-precision floating-point coordinates</para>
            </remarks>
            <seealso cref="P:EGIS.Controls.SFMap.ZoomLevel"/>
        </member>
        <member name="P:EGIS.Controls.SFMap.CentrePoint2D">
            <summary>
            Gets or sets the center point of the map in mapping coordinates (as used by the shapefiles)
            </summary>
            <remarks>
            <para>
            This method replaces the obsolete CentrePoint property
            </para>
            Changing the CenterPoint2D can be used to center the map on a new location without 
            changing the map scale
            <para>
            The ZoomLevel, CentrePoint and ClientSize of the SFMap determine the location and visible area of the rendered map. The map will be rendered 
            centered at the CentrePoint and scaled according to the ZoomLevel.
            </para>
            </remarks>
            <seealso cref="P:EGIS.Controls.SFMap.ZoomLevel"/>
        </member>
        <member name="P:EGIS.Controls.SFMap.MapBackColor">
            <summary>
            Gets or sets the color on the map background
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.RenderQuality">
            <summary>
            Gets or sets the RenderQuality to use when rendering the map
            </summary>
            <remarks>
            <para>
            Changing the RenderQuality to RenderQuality.Auto will let the SFMap change the RenderQuality dynamically
            depending on the size of the ShapeFiles and as the ZoomLevel changes. This is the default RenderQuality setting and in most cases you will not 
            need to change this setting.
            </para>
            <para>
            Changing the RenderQuality to RenderQuality.High will render the map using high quality GDI+ Graphics, but
            the rendering speed will be slowed down somewhat.
            </para>
            <para>
            Changing the RenderQuality to RenderQuality.Low will render maps much faster, but at the expense of
            lower quality graphics. For very large ShapeFiles when drawing the entire ShapeFile choosing this option
            may render the maps considerably faster.
            </para>        
            </remarks>
            <seealso cref="T:EGIS.ShapeFileLib.RenderQuality"/>
        </member>
        <member name="P:EGIS.Controls.SFMap.UseMercatorProjection">
            <summary>
            Gets or sets whether to render the map using the MercatorProjection
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.MapCoordinateReferenceSystem">
            <summary>
            Get/Set the map Coordinate Reference System
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.UseMemoryStreams">
            <summary>
            Get/Set whether any ShapeFiless added to the map should use MemoryStreams rather than 
            reading directly from disk.
            </summary>
            <remarks>
            <para>
            The default value is false.
            </para>
            <para>
            If UseMemoryStreams is changed it will only apply to any new ShapeFiles added to the map.        
            </para>
            </remarks>
        </member>
        <member name="M:EGIS.Controls.SFMap.SetZoomAndCentre(System.Double,EGIS.ShapeFileLib.PointD)">
            <summary>
            Convenience method to set the ZoomLevel and CentrePoint in one method
            </summary>
            <param name="zoom">The desired ZoomLevel</param>
            <param name="centre">The desired CentrePoint</param>
            <seealso cref="P:EGIS.Controls.SFMap.ZoomLevel"/>
            <seealso cref="P:EGIS.Controls.SFMap.CentrePoint"/>
        </member>
        <member name="M:EGIS.Controls.SFMap.ZoomToFullExtent">
            <summary>
            Centres and scales the map to fit the entire map in the SFControl
            </summary>
            <remarks>Call this method to apply a "zoom 100%"</remarks>
        </member>
        <member name="M:EGIS.Controls.SFMap.FitToExtent(EGIS.ShapeFileLib.RectangleD)">
            <summary>
            Zooms and cetres the map to fit given extent
            </summary>
            <param name="extent"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.ZoomToSelection(System.Int32)">
            <summary>
            zooms to selected record bounds in zero based layer on the map 
            </summary>
            <param name="shapefileIndex"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.ZoomToSelection(EGIS.ShapeFileLib.ShapeFile)">
            <summary>
            zooms the given layer's selected records bounds
            </summary>
            <param name="layer"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.ZoomToSelection">
            <summary>
            Zooms to the selected records bounds of all layers loaded in the control
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.MousePosToGisPoint(System.Drawing.Point)">
            <summary>
            Converts a MousePoint (in pixel coords) to a map coordinate point
            </summary>
            <remarks>
            This method is being deprecated - use PixelCoordToGisPoint
            <see cref="M:EGIS.Controls.SFMap.PixelCoordToGisPoint(System.Int32,System.Int32)"/>
            </remarks>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.MousePosToGisPoint(System.Int32,System.Int32)">
            <summary>
            Converts a MousePoint's x and y location to a map coordinate point
            </summary>
            <remarks>
            This method is being deprecated - use PixelCoordToGisPoint
            <see cref="M:EGIS.Controls.SFMap.PixelCoordToGisPoint(System.Int32,System.Int32)"/>
            </remarks>
            <param name="mouseX"></param>
            <param name="mouseY"></param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.PixelCoordToGisPoint(System.Int32,System.Int32)">
            <summary>
            Converts pixel coordinates to map coordinates
            </summary>
            <param name="pixX">pixel x value</param>
            <param name="pixY">pixel y value</param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.PixelCoordToGisPoint(System.Drawing.Point)">
            <summary>
            Converts pixel coordinates to map coordinates
            </summary>
            <param name="pt">the x,y pixel coords</param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.GisPointToPixelCoord(System.Double,System.Double)">
            <summary>
            Converts a GIS position to mouse position
            </summary>
            <param name="x">x-coord of the GIS point</param>
            <param name="y">y-coord of the GIS point</param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.GisPointToPixelCoord(EGIS.ShapeFileLib.PointD)">
            <summary>
            Converts a GIS position to mouse position
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.GetShapeIndexAtPixelCoord(System.Int32,System.Drawing.Point,System.Int32)">
            <summary>
            Returns the shape index for a given shapefile located at a point (in pixel/mouse coordinates)
            </summary>
            <param name="shapeIndex">The zero based index of the shapefile layer</param>
            <param name="pt">The pixel point</param>
            <param name="pixelDelta">The pixel delta value added to pt. I.E return shape under pt +/- delta pixels. A suitable value for delta is 5 to 8 pixels</param>
            <returns>The zero based shape index, or -1 if no shape is located at pt</returns>
        </member>
        <member name="P:EGIS.Controls.SFMap.Extent">
            <summary>
            Gets the rectangular extent of the entire map
            </summary>
            <remarks>Extent is the rectangular extent of the ENTIRE map, regardless of the current ZoomLevel or CentrePoint.
            To get the extent of the current visible area of the map call VisibleExtent</remarks>
            <seealso cref="P:EGIS.Controls.SFMap.VisibleExtent"/>
        </member>
        <member name="P:EGIS.Controls.SFMap.ProjectedExtent">
            <summary>
            Gets the rectangular extent of the entire map in projected coordinates
            </summary>
            <remarks>ProjectedExtent is the rectangular extent of the ENTIRE map, regardless of the current ZoomLevel or CentrePoint.
            If MapProjectionType is ProjectionType.none the returned RectangleD is the same as Extent</remarks>
            <seealso cref="P:EGIS.Controls.SFMap.VisibleExtent"/>
        </member>
        <member name="P:EGIS.Controls.SFMap.VisibleExtent">
            <summary>
            Gets the rectangular extent of the current visible area of the map being displayed in the SFMap control
            </summary>
            <remarks>VisibleExtent is the current visible area of the map, as determind by the current ZoomLevel, CentrePoint and ClientSize of the SFMap control.
            To get the extent of the ENTIRE map call Extent</remarks>
            <seealso cref="P:EGIS.Controls.SFMap.Extent"/>
        </member>
        <member name="M:EGIS.Controls.SFMap.FindShapeFileBypath(System.String)">
            <summary>
            Finds and returns the ShapeFile which was loaded from the given path
            </summary>
            <param name="path"></param>
            <returns>The found ShapeFile or null if the ShapeFile could not be found</returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.IndexOfShapeFileByPath(System.String)">
            <summary>
            Finds and returns the index of the ShapeFile which was loaded from the given path
            </summary>
            <param name="path"></param>
            <returns>The found zero based ShapeFile index or -1 if the ShapeFile could not be found</returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.AddShapeFile(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a new ShapeFile layer to the map
            </summary>
            <param name="path">The file path to the ShapeFile</param>
            <param name="name">The "display" name of the ShapeFile.</param>
            <param name="labelFieldName">The name of the field in the ShapeFiles's DBF file to use when rendering the shape labels</param>
            <param name="useMemoryStreams">Optional parameter indicating whether to open the ShapeFile using MemoryStreams. Default is false</param>
            <param name="fitMapToLayerExtent">optional parameter to fit the map to the shapefile's extent. Default is true</param>
            <returns>Returns the created ShapeFile which was added to the SFMap</returns>
            <remarks>
            After the shapefile is added to the map, the map will auto fit the entire ShapeFile in the control by adjusting the 
            current ZomLevel and CentrePoint accordingly.
            </remarks>
        </member>
        <member name="M:EGIS.Controls.SFMap.AddShapeFile(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a new ShapeFile layer to the map
            </summary>
            <param name="shxStream">stream to the ShapeFile's shx file</param>
            <param name="shpStream">stream to the ShapeFile's shp file</param>
            <param name="dbfStream">stream to the ShapeFile's dbf file</param>
            <param name="prjStream">stream to the ShapeFile's prj file</param>
            <param name="name">The "display" name of the ShapeFile. </param>
            <param name="labelFieldName">The name of the field in the ShapeFiles's DBF file to use when rendering the shape labels</param>
            <param name="fitMapToLayerExtent">optional parameter to fit the map to the shapefile's extent. Default is true</param>
            <returns>Returns the created ShapeFile which was added to the SFMap</returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.AddShapeFile(EGIS.ShapeFileLib.ShapeFile,System.Boolean,System.Boolean)">
            <summary>
            Adds a new ShapeFile layer to the map
            </summary>
            <param name="shapeFile">ShapeFile object to add to the map</param>
            <param name="fitMapToLayerExtent">optional parameter to fit the map to the shapefile's extent. Default is true</param>
            <returns>Returns the shapeFile which was added to the SFMap</returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.ClearShapeFiles">
            <summary>
            Removes all ShapeFile layers from the map
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.RemoveShapeFile(EGIS.ShapeFileLib.ShapeFile)">
            <summary>
            Removes the specifed ShapeFile from the SFMap control
            </summary>
            <param name="shapeFile"></param>
        </member>
        <member name="P:EGIS.Controls.SFMap.Item(System.Int32)">
            <summary>
            Gets the ShapeFile at the spcified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:EGIS.Controls.SFMap.Item(System.String)">
            <summary>
            Gets the ShapeFile with the specified file path
            </summary>        
            <returns></returns>
        </member>
        <member name="P:EGIS.Controls.SFMap.ShapeFileCount">
            <summary>
            Gets the number of ShapeFile layers in the SFMap Control
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.MoveShapeFileUp(EGIS.ShapeFileLib.ShapeFile)">
            <summary>
            Moves the spcified ShapeFile "up" in the ShapeFile layers
            </summary>
            <param name="shapeFile"></param>
            <remarks>
            When ShapeFiles are added to the map the order that they are added determines the order that
            they will be rendered. This means that the first ShapeFile layer that is rendered may potentially 
            be covered or patially covered by subsequent shapefiles.
            By calling the MoveShapeFileUp and MoveShapeFileDown methods you can control the order that the 
            ShapeFile layers will be rendered.
            </remarks>
            <seealso cref="M:EGIS.Controls.SFMap.MoveShapeFileDown(EGIS.ShapeFileLib.ShapeFile)"/>
        </member>
        <member name="M:EGIS.Controls.SFMap.MoveShapeFileDown(EGIS.ShapeFileLib.ShapeFile)">
            <summary>
            Moves the spcified ShapeFile "down" in the ShapeFile layers
            </summary>
            <param name="shapeFile"></param>
            <remarks>
            When ShapeFiles are added to the map the order that they are added determines the order that
            they will be rendered. This means that the first ShapeFile layer that is rendered may potentially 
            be covered or patially covered by subsequent shapefiles.
            By calling the MoveShapeFileUp and MoveShapeFileDown methods you can control the order that the 
            ShapeFile layers will be rendered.
            </remarks>
            <seealso cref="M:EGIS.Controls.SFMap.MoveShapeFileUp(EGIS.ShapeFileLib.ShapeFile)"/>
        </member>
        <member name="M:EGIS.Controls.SFMap.CreateMapGraphics">
            <summary>
            Creates a Graphics object from the SFMap's internal Image used for double buffering. 
            </summary>
            <remarks>
            <para>
            The SFMap control uses double buffering for all drawing. All drawing is performed on an 
            image buffer before painting the control. This method creates a Graphics object from the 
            control's Image buffer.
            </para>
            <para>
            Every call to this method will create a new Graphics obect and the returned Graphics object should be disposed by the caller. 
            If the control is resized the internal buffer will be re-created and a Graphics object returned from this method 
            previously may not be valid.
            </para>
            </remarks>
        </member>
        <member name="P:EGIS.Controls.SFMap.ScreenBuffer">
            <summary>
            Gets the SFMap's internal Image used for double buffering. All drawing is performed on this
            image before painting the control
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.DefaultMapCursor">
            <summary>
            The default Cursor of the control
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.DefaultSelectionCursor">
            <summary>
            The default Cursor of the control when the mouse is over a shape that can be selected. Default is Cursors.Hand
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.LoadOptimalRenderSettings(EGIS.ShapeFileLib.ShapeFile)">
            <summary>
            Load optimal render settings
            </summary>
            <param name="sf"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.GetBitmap">
            <summary>
            Utility method that creates and returns a new Bitmap Image of the current map displayed in the SFMap Control
            </summary>
            <remarks>
            The returned image should be disposed when you have finshed using the Bitmap
            </remarks>
            <returns></returns>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnResize(System.EventArgs)">
            <summary>
            override
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.Refresh(System.Boolean)">
            <summary>
            Causes the map to redraw all of its contents immediately
            </summary>
            <param name="fullRefresh">Flag to indicate whether to redraw al layers or just re-draw the internal buffer</param>
            <remarks>
            Internally the SFMap control uses an offsceen buffer to draw the contents of the map to, which provides efficient 
            painting when the control is redrawn due to an OS call (i.e. another window is moved accross the SFMap control).
            Caling this method with fullRefresh set to true will cause the internal buffer to be re-drawn. You should call this 
            method if a ShapeFile's RenderSettings are changed to ensure the layer is redrawn.
            </remarks>
        </member>
        <member name="M:EGIS.Controls.SFMap.InvalidateAndClearBackground">
            <summary>
            Clears the map and calls Invalidate. 
            </summary>
            <remarks>
            This method performs the same functionality
            as Refresh(true) but can be called from background threads as it calls Invalidate rather
            than Refresh
            </remarks>
        </member>
        <member name="M:EGIS.Controls.SFMap.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            override 
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:EGIS.Controls.SFMap.PanSelectMode">
            <summary>
            get/set current PanSelectMode
            </summary>
        </member>
        <member name="P:EGIS.Controls.SFMap.InternalPanSelectMode">
            <summary>
            InternalPanSelectMode is set by keys or controlPanSelectMode
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event. Derived classes overriding this method should call base.OnMouseDown
            to ensure the SFMap control handles the event correctly
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event. Derived classes overriding this method should call base.OnMouseUp
            to ensure the SFMap control raises the event correctly
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove event. Derived classes overriding this method should call base.OnMouseMove
            to ensure the SFMap control handles the event correctly
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnMouseLeave(System.EventArgs)">
            <summary>
            Handles the MouseLeave event. Derived classes overriding this method should call base.OnMouseLeave
            to ensure the SFMap control handles the event correctly
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseWheel event. Derived classes overriding this method should call base.OnMouseWheel
            to ensure the SFMap control handles the event correctly
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EGIS.Controls.SFMap.OnDoubleClick(System.EventArgs)">
            <summary>
            Handles the DoubleClick event. Derived classes overriding this method should call base.OnDoubleClick
            to ensure the SFMap control handles the event correctly
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:EGIS.Controls.SFMap.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:EGIS.Controls.SFMap.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EGIS.Controls.SFMap.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EGIS.Controls.ShapeFileListControl">
            <summary>
            User control containing a list of ShapeFiles
            </summary>
        </member>
        <member name="E:EGIS.Controls.ShapeFileListControl.SelectedShapeFileChanged">
            <summary>
            Selected ShapeFile Changed event
            </summary>
        </member>
        <member name="E:EGIS.Controls.ShapeFileListControl.AddLayerClicked">
            <summary>
            Event fired when the add layer button is clicked 
            </summary>
        </member>
        <member name="M:EGIS.Controls.ShapeFileListControl.OnAddLayerClicked">
            <summary>
            Called when AddLayer button is clicked. Fires the AddLayerClicked event
            </summary>
        </member>
        <member name="P:EGIS.Controls.ShapeFileListControl.Map">
            <summary>
            Reference to the SFMap that the ShapeFileListControl layers is associated with
            </summary>
        </member>
        <member name="P:EGIS.Controls.ShapeFileListControl.SelectedShapeFile">
            <summary>
            Returns the currently selected ShapeFile in the controls list of 
            shapefiles
            </summary>
        </member>
        <member name="M:EGIS.Controls.ShapeFileListControl.SetMap(EGIS.Controls.SFMap)">
            <summary>
            called when the Map property is set
            </summary>
            <param name="map"></param>
        </member>
        <member name="F:EGIS.Controls.ShapeFileListControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:EGIS.Controls.ShapeFileListControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EGIS.Controls.ShapeFileListControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
